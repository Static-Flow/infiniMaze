<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>{{.title}}</title>
  <script src="https://cdn.jsdelivr.net/pako/1.0.3/pako.min.js"></script>
  <script>
    var globalX = 0, globalY = 0;
    var canvas;
    var img = new Image();
    var WIDTH = 1020;
    var HEIGHT = 1020;
    var imgSrcUrl = "http://localhost:3000/mazeImg";
    var x = (WIDTH-20)/2;
    var y = (HEIGHT-20)/2;
    var dx = 20;
    var dy = 20;
    function fetchMazeData() {
      return fetch('/maze').then(response => response.json()).then(mazeData => uncompress(mazeData)).then((uncompressedData) => {return JSON.parse(uncompressedData)});
    }

    function uncompress(data){
      let compressData = atob(data);
      compressData = compressData.split('').map(function(e) {
        return e.charCodeAt(0);
      });
      let binData = new Uint8Array(compressData);
      data = pako.inflate(binData);
      return String.fromCharCode.apply(null, new Uint16Array(data));
    }

    function init() {
      document.getElementById("globalPosition").innerText = "InfiniMaze Global Position: " + globalX.toString() + " : " + globalY.toString()
      canvas = document.getElementById("mazeCanvas");
      ctx = canvas.getContext("2d");
      img.src = imgSrcUrl;
      return setInterval(draw, 10);
    }

    function rect(x,y,w,h) {
      ctx.beginPath();
      ctx.rect(x,y,w,h);
      ctx.closePath();
      ctx.fill();
    }

    function clear() {
      ctx.clearRect(0, 0, WIDTH, HEIGHT);
      ctx.drawImage(img, 0, 0);
    }

    function draw() {
      clear();
      ctx.fillStyle = "purple";
      rect(x, y, 20,20);
    }

    function checkcollision() {
      var imgd = ctx.getImageData(x, y, 1, 1);
      var pix = imgd.data;
      if(pix[0]+pix[1]+pix[2] === 0){
        return 1;
      } else if(pix[0]+pix[1]+pix[2] === 255) {
        console.log("Hit door")
        return 2;
      } else {
        return 0;
      }
    }

    function updateMaze() {
      fetch(imgSrcUrl, {
        method: 'POST',
        body: new URLSearchParams({
          deltaX: globalX.toString(),
          deltaY: globalY.toString()
        })
      }).then(response => {
        if (!response.ok) {
          throw new Error('Network response was not OK');
        }
      });
      img = new Image();
      img.src = imgSrcUrl;
      clear();
    }

    window.addEventListener("keydown", function(event) {
      switch (event.key) {
        case "ArrowUp":
          if (y - dy >= 0) {
            y -= dy;
            clear();
            switch (checkcollision()) {
              case 0:
                break;
              case 1:
                y += dy;
                break;
              case 2:
                globalY+=1;
                y = HEIGHT-40;
                updateMaze();
                break;
            }
          }
          break;
        case "ArrowDown":
          if (y + dy < HEIGHT) {
            y += dy;
            clear();
            switch (checkcollision()) {
              case 0:
                break;
              case 1:
                y -= dy;
                break;
              case 2:
                globalY-=1;
                y = 20;
                updateMaze();
                break;
            }
          }
          break;
        case "ArrowLeft":
          if (x - dx >= 0) {
            x -= dx;
            clear();
            switch (checkcollision()) {
              case 0:
                break;
              case 1:
                x += dx;
                break;
              case 2:
                globalX-=1;
                x = WIDTH-40;
                updateMaze();
                break;
            }
          }
          break;
        case "ArrowRight":
          if (x + dx < WIDTH) {
            x += dx;
            clear();
            switch (checkcollision()) {
              case 0:
                break;
              case 1:
                x -= dx;
                break;
              case 2:
                globalX+=1;
                x = 20;
                updateMaze();
                break;
            }
          }
          break;
      }
      document.getElementById("globalPosition").innerText = "InfiniMaze Global Position: " + globalX.toString() + " : " + globalY.toString()
    }, true);


  </script>
</head>
<body onload="init()" style="background-color: darkslategrey;">
<div style="
    width: 1020px;
    height: 1020px;
    margin: 100px auto;">
  <div style="
    text-align: center;
    font-weight: bold;
    margin-left: 36%;
    font-size: 15pt;
    block-size: fit-content;
    width: fit-content;
    background-color: #4F2F2F;">
    <p id="globalPosition"></p>
  </div>
<canvas id="mazeCanvas" width="1020" height="1020">This text is displayed if your browser does not support HTML5 Canvas.</canvas>
</div>
</body>
</html>